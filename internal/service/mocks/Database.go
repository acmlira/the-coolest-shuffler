// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Database is an autogenerated mock type for the Database type
type Database struct {
	mock.Mock
}

// Select provides a mock function with given fields: table, filter, model
func (_m *Database) Select(table string, filter map[string][]string, model interface{}) []map[string]interface{} {
	ret := _m.Called(table, filter, model)

	var r0 []map[string]interface{}
	if rf, ok := ret.Get(0).(func(string, map[string][]string, interface{}) []map[string]interface{}); ok {
		r0 = rf(table, filter, model)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]map[string]interface{})
		}
	}

	return r0
}

type mockConstructorTestingTNewDatabase interface {
	mock.TestingT
	Cleanup(func())
}

// NewDatabase creates a new instance of Database. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDatabase(t mockConstructorTestingTNewDatabase) *Database {
	mock := &Database{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
