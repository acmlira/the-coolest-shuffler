// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "the-coolest-shuffler/internal/model"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// CardsRepository is an autogenerated mock type for the CardsRepository type
type CardsRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *CardsRepository) Get(key uuid.UUID) *model.Deck {
	ret := _m.Called(key)

	var r0 *model.Deck
	if rf, ok := ret.Get(0).(func(uuid.UUID) *model.Deck); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Deck)
		}
	}

	return r0
}

// Set provides a mock function with given fields: deck
func (_m *CardsRepository) Set(deck *model.Deck) *model.Deck {
	ret := _m.Called(deck)

	var r0 *model.Deck
	if rf, ok := ret.Get(0).(func(*model.Deck) *model.Deck); ok {
		r0 = rf(deck)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Deck)
		}
	}

	return r0
}

type mockConstructorTestingTNewCardsRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewCardsRepository creates a new instance of CardsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCardsRepository(t mockConstructorTestingTNewCardsRepository) *CardsRepository {
	mock := &CardsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
