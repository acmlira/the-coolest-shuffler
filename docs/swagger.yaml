basePath: /the-coolest-shuffler/v1
definitions:
  model.Card:
    properties:
      code:
        type: string
      suit:
        type: string
      value:
        type: string
    type: object
  model.Deck:
    properties:
      amount:
        type: integer
      cards:
        items:
          $ref: '#/definitions/model.Card'
        type: array
      id:
        type: string
      remaining:
        type: integer
      shuffled:
        type: boolean
    type: object
  model.Request:
    properties:
      amount:
        type: integer
      codes:
        items:
          type: string
        type: array
      deckId:
        type: string
      shuffle:
        type: boolean
      suits:
        items:
          type: string
        type: array
      values:
        items:
          type: string
        type: array
    type: object
host: http://localhost:8916
info:
  contact:
    name: acmlira
    url: https://github.com/acmlira/the-coolest-shuffler
  description: API to handle the deck and cards to be used in any game like Poker
    or Blackjack
  license:
    name: MIT
    url: https://www.mit.edu/~amini/LICENSE.md
  title: The Coolest Shuffler
  version: "1.0"
paths:
  /deck:
    post:
      consumes:
      - application/json
      description: Create new Deck based in predefined cards
      parameters:
      - description: Deck properties
        in: body
        name: Request
        schema:
          $ref: '#/definitions/model.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Deck'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create new Deck
      tags:
      - Deck
  /deck/{deckId}:
    get:
      consumes:
      - application/json
      description: Show a created deck
      parameters:
      - description: code filter
        in: path
        name: deckId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Deck'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Show a deck
      tags:
      - Deck
  /deck/new:
    get:
      consumes:
      - application/json
      description: Create new Deck based in predefined cards
      parameters:
      - description: shuffle cards
        in: query
        name: shuffle
        type: boolean
      - description: amount of card sets (before filters)
        in: query
        name: amount
        type: integer
      - description: code filter
        in: query
        items:
          type: string
        name: codes
        type: array
      - description: value filter
        in: query
        items:
          type: string
        name: values
        type: array
      - description: suit filter
        in: query
        items:
          type: string
        name: suits
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Deck'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create new Deck
      tags:
      - Deck
swagger: "2.0"
